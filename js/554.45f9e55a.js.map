{"version":3,"file":"js/554.45f9e55a.js","mappings":"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","sources":["webpack://vuex001/../../../src/components/VDialog/VDialog.tsx","webpack://vuex001/../../../src/components/VDivider/VDivider.tsx","webpack://vuex001/../../../src/components/VGrid/VSpacer.ts","webpack://vuex001/../../../src/components/VTabs/VTab.tsx","webpack://vuex001/../../../src/components/VSlideGroup/helpers.ts","webpack://vuex001/../../../src/components/VSlideGroup/VSlideGroup.tsx","webpack://vuex001/../../../src/components/VTabs/VTabs.tsx","webpack://vuex001/../../../src/components/VTabs/shared.ts"],"sourcesContent":["// Styles\nimport './VDialog.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VOverlay } from '@/components/VOverlay'\n\n// Composables\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeTransitionProps } from '@/composables/transition'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\nimport { forwardRefs } from '@/composables/forwardRefs'\n\n// Utilities\nimport { nextTick, ref, watch } from 'vue'\nimport { genericComponent, IN_BROWSER, useRender } from '@/util'\n\n// Types\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\n\nexport const VDialog = genericComponent<new () => {\n  $slots: OverlaySlots\n}>()({\n  name: 'VDialog',\n\n  inheritAttrs: false,\n\n  props: {\n    fullscreen: Boolean,\n    origin: {\n      type: String,\n      default: 'center center',\n    },\n    retainFocus: {\n      type: Boolean,\n      default: true,\n    },\n    scrollable: Boolean,\n    modelValue: Boolean,\n\n    ...makeDimensionProps({ width: 'auto' }),\n    ...makeTransitionProps({\n      transition: { component: VDialogTransition },\n    }),\n  },\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { dimensionStyles } = useDimension(props)\n    const { scopeId } = useScopeId()\n\n    const overlay = ref<VOverlay>()\n    function onFocusin (e: FocusEvent) {\n      const before = e.relatedTarget as HTMLElement | null\n      const after = e.target as HTMLElement | null\n\n      if (\n        before !== after &&\n        overlay.value?.contentEl &&\n        // We're the topmost dialog\n        overlay.value?.globalTop &&\n        // It isn't the document or the dialog body\n        ![document, overlay.value.contentEl].includes(after!) &&\n        // It isn't inside the dialog body\n        !overlay.value.contentEl.contains(after)\n      ) {\n        const focusable = [...overlay.value.contentEl.querySelectorAll(\n          'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n        )].filter(el => !el.hasAttribute('disabled')) as HTMLElement[]\n\n        if (!focusable.length) return\n\n        const firstElement = focusable[0]\n        const lastElement = focusable[focusable.length - 1]\n\n        if (before === firstElement) {\n          lastElement.focus()\n        } else {\n          firstElement.focus()\n        }\n      }\n    }\n\n    if (IN_BROWSER) {\n      watch(() => isActive.value && props.retainFocus, val => {\n        val\n          ? document.addEventListener('focusin', onFocusin)\n          : document.removeEventListener('focusin', onFocusin)\n      }, { immediate: true })\n    }\n\n    watch(isActive, async val => {\n      await nextTick()\n      if (val) {\n        overlay.value!.contentEl?.focus({ preventScroll: true })\n      } else {\n        overlay.value!.activatorEl?.focus({ preventScroll: true })\n      }\n    })\n\n    useRender(() => (\n      <VOverlay\n        v-model={ isActive.value }\n        class={[\n          'v-dialog',\n          {\n            'v-dialog--fullscreen': props.fullscreen,\n            'v-dialog--scrollable': props.scrollable,\n          },\n        ]}\n        style={ dimensionStyles.value }\n        transition={ props.transition }\n        scrollStrategy=\"block\"\n        ref={ overlay }\n        aria-role=\"dialog\"\n        aria-modal=\"true\"\n        activatorProps={{\n          'aria-haspopup': 'dialog',\n          'aria-expanded': String(isActive.value),\n        }}\n        z-index={ 2400 }\n        { ...scopeId }\n        { ...attrs }\n        v-slots={{\n          default: slots.default,\n          activator: slots.activator,\n        }}\n      />\n    ))\n\n    return forwardRefs({}, overlay)\n  },\n})\n\nexport type VDialog = InstanceType<typeof VDialog>\n","// Styles\nimport './VDivider.sass'\n\n// Composables\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useBackgroundColor } from '@/composables/color'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, defineComponent, useRender } from '@/util'\n\n// Types\ntype DividerKey = 'borderRightWidth' | 'borderTopWidth' | 'maxHeight' | 'maxWidth'\ntype DividerStyles = Partial<Record<DividerKey, string>>\n\nexport const VDivider = defineComponent({\n  name: 'VDivider',\n\n  props: {\n    color: String,\n    inset: Boolean,\n    length: [Number, String],\n    thickness: [Number, String],\n    vertical: Boolean,\n\n    ...makeThemeProps(),\n  },\n\n  setup (props, { attrs }) {\n    const { themeClasses } = provideTheme(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const dividerStyles = computed(() => {\n      const styles: DividerStyles = {}\n\n      if (props.length) {\n        styles[props.vertical ? 'maxHeight' : 'maxWidth'] = convertToUnit(props.length)\n      }\n\n      if (props.thickness) {\n        styles[props.vertical ? 'borderRightWidth' : 'borderTopWidth'] = convertToUnit(props.thickness)\n      }\n\n      return styles\n    })\n\n    useRender(() => (\n      <hr\n        class={[\n          {\n            'v-divider': true,\n            'v-divider--inset': props.inset,\n            'v-divider--vertical': props.vertical,\n          },\n          themeClasses.value,\n          backgroundColorClasses.value,\n        ]}\n        style={[\n          dividerStyles.value,\n          backgroundColorStyles.value,\n        ]}\n        aria-orientation={\n          !attrs.role || attrs.role === 'separator'\n            ? props.vertical ? 'vertical' : 'horizontal'\n            : undefined\n        }\n        role={`${attrs.role || 'separator'}`}\n      />\n    ))\n\n    return {}\n  },\n})\n","import { createSimpleFunctional } from '@/util'\n\nexport const VSpacer = createSimpleFunctional('flex-grow-1', 'div', 'VSpacer')\n","// Styles\nimport './VTab.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { makeGroupItemProps } from '@/composables/group'\nimport { makeRouterProps } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps } from '@/composables/theme'\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, ref } from 'vue'\nimport { animate, defineComponent, pick, standardEasing, useRender } from '@/util'\n\n// Types\nimport { VTabsSymbol } from './shared'\nimport type { PropType } from 'vue'\n\nexport const VTab = defineComponent({\n  name: 'VTab',\n\n  props: {\n    fixed: Boolean,\n    icon: [Boolean, String, Function, Object] as PropType<boolean | IconValue>,\n    prependIcon: IconValue,\n    appendIcon: IconValue,\n\n    stacked: Boolean,\n    title: String,\n\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    color: String,\n    sliderColor: String,\n    hideSlider: Boolean,\n\n    direction: {\n      type: String as PropType<'horizontal' | 'vertical'>,\n      default: 'horizontal',\n    },\n\n    ...makeTagProps(),\n    ...makeRouterProps(),\n    ...makeGroupItemProps({\n      selectedClass: 'v-tab--selected',\n    }),\n    ...makeThemeProps(),\n  },\n\n  setup (props, { slots, attrs }) {\n    const { textColorClasses: sliderColorClasses, textColorStyles: sliderColorStyles } = useTextColor(props, 'sliderColor')\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n    const isSelected = ref(false)\n\n    const rootEl = ref<VBtn>()\n    const sliderEl = ref<HTMLElement>()\n\n    function updateSlider ({ value }: { value: boolean }) {\n      isSelected.value = value\n\n      if (value) {\n        const prevEl: HTMLElement | undefined = rootEl.value?.$el.parentElement?.querySelector('.v-tab--selected .v-tab__slider')\n        const nextEl = sliderEl.value\n\n        if (!prevEl || !nextEl) return\n\n        const color = getComputedStyle(prevEl).color\n\n        const prevBox = prevEl.getBoundingClientRect()\n        const nextBox = nextEl.getBoundingClientRect()\n\n        const xy = isHorizontal.value ? 'x' : 'y'\n        const XY = isHorizontal.value ? 'X' : 'Y'\n        const rightBottom = isHorizontal.value ? 'right' : 'bottom'\n        const widthHeight = isHorizontal.value ? 'width' : 'height'\n\n        const prevPos = prevBox[xy]\n        const nextPos = nextBox[xy]\n        const delta = prevPos > nextPos\n          ? prevBox[rightBottom] - nextBox[rightBottom]\n          : prevBox[xy] - nextBox[xy]\n        const origin =\n          Math.sign(delta) > 0 ? (isHorizontal.value ? 'right' : 'bottom')\n          : Math.sign(delta) < 0 ? (isHorizontal.value ? 'left' : 'top')\n          : 'center'\n        const size = Math.abs(delta) + (Math.sign(delta) < 0 ? prevBox[widthHeight] : nextBox[widthHeight])\n        const scale = size / Math.max(prevBox[widthHeight], nextBox[widthHeight])\n        const initialScale = prevBox[widthHeight] / nextBox[widthHeight]\n\n        const sigma = 1.5\n        animate(nextEl, {\n          backgroundColor: [color, ''],\n          transform: [\n            `translate${XY}(${delta}px) scale${XY}(${initialScale})`,\n            `translate${XY}(${delta / sigma}px) scale${XY}(${(scale - 1) / sigma + 1})`,\n            '',\n          ],\n          transformOrigin: Array(3).fill(origin),\n        }, {\n          duration: 225,\n          easing: standardEasing,\n        })\n      }\n    }\n\n    useRender(() => {\n      const [btnProps] = pick(props, [\n        'href',\n        'to',\n        'replace',\n        'icon',\n        'stacked',\n        'prependIcon',\n        'appendIcon',\n        'ripple',\n        'theme',\n        'disabled',\n        'selectedClass',\n        'value',\n        'color',\n      ])\n\n      return (\n        <VBtn\n          _as=\"VTab\"\n          symbol={ VTabsSymbol }\n          ref={ rootEl }\n          class={[\n            'v-tab',\n          ]}\n          tabindex={ isSelected.value ? 0 : -1 }\n          role=\"tab\"\n          aria-selected={ String(isSelected.value) }\n          block={ props.fixed }\n          maxWidth={ props.fixed ? 300 : undefined }\n          variant=\"text\"\n          rounded={ 0 }\n          { ...btnProps }\n          { ...attrs }\n          onGroup:selected={ updateSlider }\n        >\n          { slots.default ? slots.default() : props.title }\n          { !props.hideSlider && (\n            <div\n              ref={ sliderEl }\n              class={[\n                'v-tab__slider',\n                sliderColorClasses.value,\n              ]}\n              style={ sliderColorStyles.value }\n            />\n          ) }\n        </VBtn>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VTab = InstanceType<typeof VTab>\n","export function bias (val: number) {\n  const c = 0.501\n  const x = Math.abs(val)\n  return Math.sign(val) * (x / ((1 / c - 2) * (1 - x) + 1))\n}\n\nexport function calculateUpdatedOffset ({\n  selectedElement,\n  containerSize,\n  contentSize,\n  isRtl,\n  currentScrollOffset,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerSize: number\n  contentSize: number\n  isRtl: boolean\n  currentScrollOffset: number\n  isHorizontal: boolean\n}): number {\n  const clientSize = isHorizontal ? selectedElement.clientWidth : selectedElement.clientHeight\n  const offsetStart = isHorizontal ? selectedElement.offsetLeft : selectedElement.offsetTop\n  const adjustedOffsetStart = isRtl && isHorizontal ? (contentSize - offsetStart - clientSize) : offsetStart\n\n  const totalSize = containerSize + currentScrollOffset\n  const itemOffset = clientSize + adjustedOffsetStart\n  const additionalOffset = clientSize * 0.4\n\n  if (adjustedOffsetStart <= currentScrollOffset) {\n    currentScrollOffset = Math.max(adjustedOffsetStart - additionalOffset, 0)\n  } else if (totalSize <= itemOffset) {\n    currentScrollOffset = Math.min(currentScrollOffset - (totalSize - itemOffset - additionalOffset), contentSize - containerSize)\n  }\n\n  return currentScrollOffset\n}\n\nexport function calculateCenteredOffset ({\n  selectedElement,\n  containerSize,\n  contentSize,\n  isRtl,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerSize: number\n  contentSize: number\n  isRtl: boolean\n  isHorizontal: boolean\n}): number {\n  const clientSize = isHorizontal ? selectedElement.clientWidth : selectedElement.clientHeight\n  const offsetStart = isHorizontal ? selectedElement.offsetLeft : selectedElement.offsetTop\n\n  const offsetCentered = isRtl && isHorizontal\n    ? contentSize - offsetStart - clientSize / 2 - containerSize / 2\n    : offsetStart + clientSize / 2 - containerSize / 2\n\n  return Math.min(contentSize - containerSize, Math.max(0, offsetCentered))\n}\n","// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport { VFadeTransition } from '@/components/transitions'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { useDisplay } from '@/composables'\nimport { useResizeObserver } from '@/composables/resizeObserver'\nimport { useRtl } from '@/composables/rtl'\n\n// Utilities\nimport { bias, calculateCenteredOffset, calculateUpdatedOffset } from './helpers'\nimport { clamp, defineComponent, IN_BROWSER, useRender } from '@/util'\nimport { computed, ref, watch } from 'vue'\n\n// Types\nimport type { GroupProvide } from '@/composables/group'\nimport type { InjectionKey } from 'vue'\n\nexport const VSlideGroupSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-slide-group')\n\nexport const VSlideGroup = defineComponent({\n  name: 'VSlideGroup',\n\n  props: {\n    centerActive: Boolean,\n    direction: {\n      type: String,\n      default: 'horizontal',\n    },\n    symbol: {\n      type: null,\n      default: VSlideGroupSymbol,\n    },\n    nextIcon: {\n      type: IconValue,\n      default: '$next',\n    },\n    prevIcon: {\n      type: IconValue,\n      default: '$prev',\n    },\n    showArrows: {\n      type: [Boolean, String],\n      validator: (v: any) => (\n        typeof v === 'boolean' || [\n          'always',\n          'desktop',\n          'mobile',\n        ].includes(v)\n      ),\n    },\n\n    ...makeTagProps(),\n    ...makeGroupProps({\n      selectedClass: 'v-slide-group-item--active',\n    }),\n  },\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { isRtl } = useRtl()\n    const { mobile } = useDisplay()\n    const group = useGroup(props, props.symbol)\n    const isOverflowing = ref(false)\n    const scrollOffset = ref(0)\n    const containerSize = ref(0)\n    const contentSize = ref(0)\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n\n    const { resizeRef: containerRef, contentRect: containerRect } = useResizeObserver()\n    const { resizeRef: contentRef, contentRect } = useResizeObserver()\n\n    const firstSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[0])\n    })\n\n    const lastSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[group.selected.value.length - 1])\n    })\n\n    if (IN_BROWSER) {\n      let frame = -1\n      watch(() => [group.selected.value, containerRect.value, contentRect.value, isHorizontal.value], () => {\n        cancelAnimationFrame(frame)\n        frame = requestAnimationFrame(() => {\n          if (containerRect.value && contentRect.value) {\n            const sizeProperty = isHorizontal.value ? 'width' : 'height'\n\n            containerSize.value = containerRect.value[sizeProperty]\n            contentSize.value = contentRect.value[sizeProperty]\n\n            isOverflowing.value = containerSize.value + 1 < contentSize.value\n          }\n\n          if (firstSelectedIndex.value >= 0 && contentRef.value) {\n            // TODO: Is this too naive? Should we store element references in group composable?\n            const selectedElement = contentRef.value.children[lastSelectedIndex.value] as HTMLElement\n\n            if (firstSelectedIndex.value === 0 || !isOverflowing.value) {\n              scrollOffset.value = 0\n            } else if (props.centerActive) {\n              scrollOffset.value = calculateCenteredOffset({\n                selectedElement,\n                containerSize: containerSize.value,\n                contentSize: contentSize.value,\n                isRtl: isRtl.value,\n                isHorizontal: isHorizontal.value,\n              })\n            } else if (isOverflowing.value) {\n              scrollOffset.value = calculateUpdatedOffset({\n                selectedElement,\n                containerSize: containerSize.value,\n                contentSize: contentSize.value,\n                isRtl: isRtl.value,\n                currentScrollOffset: scrollOffset.value,\n                isHorizontal: isHorizontal.value,\n              })\n            }\n          }\n        })\n      })\n    }\n\n    const disableTransition = ref(false)\n\n    let startTouch = 0\n    let startOffset = 0\n\n    function onTouchstart (e: TouchEvent) {\n      const sizeProperty = isHorizontal.value ? 'clientX' : 'clientY'\n      const sign = isRtl.value && isHorizontal.value ? -1 : 1\n      startOffset = sign * scrollOffset.value\n      startTouch = e.touches[0][sizeProperty]\n      disableTransition.value = true\n    }\n\n    function onTouchmove (e: TouchEvent) {\n      if (!isOverflowing.value) return\n\n      const sizeProperty = isHorizontal.value ? 'clientX' : 'clientY'\n      const sign = isRtl.value && isHorizontal.value ? -1 : 1\n      scrollOffset.value = sign * (startOffset + startTouch - e.touches[0][sizeProperty])\n    }\n\n    function onTouchend (e: TouchEvent) {\n      const maxScrollOffset = contentSize.value - containerSize.value\n\n      if (scrollOffset.value < 0 || !isOverflowing.value) {\n        scrollOffset.value = 0\n      } else if (scrollOffset.value >= maxScrollOffset) {\n        scrollOffset.value = maxScrollOffset\n      }\n\n      disableTransition.value = false\n    }\n\n    function onScroll () {\n      if (!containerRef.value) return\n\n      containerRef.value[isHorizontal.value ? 'scrollLeft' : 'scrollTop'] = 0\n    }\n\n    const isFocused = ref(false)\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n\n      if (!isOverflowing.value || !contentRef.value) return\n\n      // Focused element is likely to be the root of an item, so a\n      // breadth-first search will probably find it in the first iteration\n      for (const el of e.composedPath()) {\n        for (const item of contentRef.value.children) {\n          if (item === el) {\n            scrollOffset.value = calculateUpdatedOffset({\n              selectedElement: item as HTMLElement,\n              containerSize: containerSize.value,\n              contentSize: contentSize.value,\n              isRtl: isRtl.value,\n              currentScrollOffset: scrollOffset.value,\n              isHorizontal: isHorizontal.value,\n            })\n            return\n          }\n        }\n      }\n    }\n\n    function onFocusout (e: FocusEvent) {\n      isFocused.value = false\n    }\n\n    function onFocus (e: FocusEvent) {\n      if (\n        !isFocused.value &&\n        !(e.relatedTarget && contentRef.value?.contains(e.relatedTarget as Node))\n      ) focus()\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (!contentRef.value) return\n\n      if (isHorizontal.value) {\n        if (e.key === 'ArrowRight') {\n          focus(isRtl.value ? 'prev' : 'next')\n        } else if (e.key === 'ArrowLeft') {\n          focus(isRtl.value ? 'next' : 'prev')\n        }\n      } else {\n        if (e.key === 'ArrowDown') {\n          focus('next')\n        } else if (e.key === 'ArrowUp') {\n          focus('prev')\n        }\n      }\n\n      if (e.key === 'Home') {\n        focus('first')\n      } else if (e.key === 'End') {\n        focus('last')\n      }\n    }\n\n    function focus (location?: 'next' | 'prev' | 'first' | 'last') {\n      if (!contentRef.value) return\n\n      if (!location) {\n        contentRef.value.querySelector('[tabindex]')\n        const focusable = [...contentRef.value.querySelectorAll(\n          'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n        )].filter(el => !el.hasAttribute('disabled')) as HTMLElement[]\n        focusable[0]?.focus()\n      } else if (location === 'next') {\n        const el = contentRef.value.querySelector(':focus')?.nextElementSibling as HTMLElement | undefined\n        if (el) el.focus()\n        else focus('first')\n      } else if (location === 'prev') {\n        const el = contentRef.value.querySelector(':focus')?.previousElementSibling as HTMLElement | undefined\n        if (el) el.focus()\n        else focus('last')\n      } else if (location === 'first') {\n        (contentRef.value.firstElementChild as HTMLElement)?.focus()\n      } else if (location === 'last') {\n        (contentRef.value.lastElementChild as HTMLElement)?.focus()\n      }\n    }\n\n    function scrollTo (location: 'prev' | 'next') {\n      const newAbsoluteOffset = scrollOffset.value + (location === 'prev' ? -1 : 1) * containerSize.value\n\n      scrollOffset.value = clamp(newAbsoluteOffset, 0, contentSize.value - containerSize.value)\n    }\n\n    const contentStyles = computed(() => {\n      // This adds friction when scrolling the 'wrong' way when at max offset\n      let scrollAmount = scrollOffset.value > contentSize.value - containerSize.value\n        ? -(contentSize.value - containerSize.value) + bias(contentSize.value - containerSize.value - scrollOffset.value)\n        : -scrollOffset.value\n\n      // This adds friction when scrolling the 'wrong' way when at min offset\n      if (scrollOffset.value <= 0) {\n        scrollAmount = bias(-scrollOffset.value)\n      }\n\n      const sign = isRtl.value && isHorizontal.value ? -1 : 1\n      return {\n        transform: `translate${isHorizontal.value ? 'X' : 'Y'}(${sign * scrollAmount}px)`,\n        transition: disableTransition.value ? 'none' : '',\n        willChange: disableTransition.value ? 'transform' : '',\n      }\n    })\n\n    const slotProps = computed(() => ({\n      next: group.next,\n      prev: group.prev,\n      select: group.select,\n      isSelected: group.isSelected,\n    }))\n\n    const hasAffixes = computed(() => {\n      switch (props.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !mobile.value\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return isOverflowing.value || Math.abs(scrollOffset.value) > 0\n\n        // Always show on mobile\n        case 'mobile': return (\n          mobile.value ||\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !mobile.value &&\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n      }\n    })\n\n    const hasPrev = computed(() => {\n      return Math.abs(scrollOffset.value) > 0\n    })\n\n    const hasNext = computed(() => {\n      // Check one scroll ahead to know the width of right-most item\n      return contentSize.value > Math.abs(scrollOffset.value) + containerSize.value\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-slide-group',\n          {\n            'v-slide-group--vertical': !isHorizontal.value,\n            'v-slide-group--has-affixes': hasAffixes.value,\n            'v-slide-group--is-overflowing': isOverflowing.value,\n          },\n        ]}\n        tabindex={ (isFocused.value || group.selected.value.length) ? -1 : 0 }\n        onFocus={ onFocus }\n      >\n        { hasAffixes.value && (\n          <div\n            key=\"prev\"\n            class={[\n              'v-slide-group__prev',\n              { 'v-slide-group__prev--disabled': !hasPrev.value },\n            ]}\n            onClick={ () => scrollTo('prev') }\n          >\n            { slots.prev?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.nextIcon : props.prevIcon }></VIcon>\n              </VFadeTransition>\n            ) }\n          </div>\n        ) }\n\n        <div\n          key=\"container\"\n          ref={ containerRef }\n          class=\"v-slide-group__container\"\n          onScroll={ onScroll }\n        >\n          <div\n            ref={ contentRef }\n            class=\"v-slide-group__content\"\n            style={ contentStyles.value }\n            onTouchstartPassive={ onTouchstart }\n            onTouchmovePassive={ onTouchmove }\n            onTouchendPassive={ onTouchend }\n            onFocusin={ onFocusin }\n            onFocusout={ onFocusout }\n            onKeydown={ onKeydown }\n          >\n            { slots.default?.(slotProps.value) }\n          </div>\n        </div>\n\n        { hasAffixes.value && (\n          <div\n            key=\"next\"\n            class={[\n              'v-slide-group__next',\n              { 'v-slide-group__next--disabled': !hasNext.value },\n            ]}\n            onClick={ () => scrollTo('next') }\n          >\n            { slots.next?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.prevIcon : props.nextIcon }></VIcon>\n              </VFadeTransition>\n            ) }\n          </div>\n        ) }\n      </props.tag>\n    ))\n\n    return {\n      selected: group.selected,\n      scrollTo,\n      scrollOffset,\n      focus,\n    }\n  },\n})\n\nexport type VSlideGroup = InstanceType<typeof VSlideGroup>\n","// Styles\nimport './VTabs.sass'\n\n// Components\nimport { VSlideGroup } from '@/components/VSlideGroup'\nimport { VTab } from './VTab'\n\n// Composables\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeTagProps } from '@/composables/tag'\nimport { provideDefaults } from '@/composables/defaults'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { defineComponent, useRender } from '@/util'\n\n// Types\nimport { VTabsSymbol } from './shared'\nimport type { PropType } from 'vue'\n\nexport type TabItem = string | Record<string, any>\n\nfunction parseItems (items: TabItem[] | undefined) {\n  if (!items) return []\n\n  return items.map(item => {\n    if (typeof item === 'string') return { title: item, value: item }\n\n    return item\n  })\n}\n\nexport const VTabs = defineComponent({\n  name: 'VTabs',\n\n  props: {\n    alignWithTitle: Boolean,\n    color: String,\n    direction: {\n      type: String as PropType<'horizontal' | 'vertical'>,\n      default: 'horizontal',\n    },\n    fixedTabs: Boolean,\n    items: {\n      type: Array as PropType<TabItem[]>,\n      default: () => ([]),\n    },\n    stacked: Boolean,\n    bgColor: String,\n    centered: Boolean,\n    grow: Boolean,\n    height: {\n      type: [Number, String],\n      default: undefined,\n    },\n    hideSlider: Boolean,\n    optional: Boolean,\n    end: Boolean,\n    sliderColor: String,\n    modelValue: null,\n\n    ...makeDensityProps(),\n    ...makeTagProps(),\n  },\n\n  emits: {\n    'update:modelValue': (v: unknown) => true,\n  },\n\n  setup (props, { slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const parsedItems = computed(() => parseItems(props.items))\n    const { densityClasses } = useDensity(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n\n    provideDefaults({\n      VTab: {\n        color: toRef(props, 'color'),\n        direction: toRef(props, 'direction'),\n        stacked: toRef(props, 'stacked'),\n        fixed: toRef(props, 'fixedTabs'),\n        sliderColor: toRef(props, 'sliderColor'),\n        hideSlider: toRef(props, 'hideSlider'),\n      },\n    })\n\n    useRender(() => (\n      <VSlideGroup\n        v-model={ model.value }\n        class={[\n          'v-tabs',\n          `v-tabs--${props.direction}`,\n          {\n            'v-tabs--align-with-title': props.alignWithTitle,\n            'v-tabs--centered': props.centered,\n            'v-tabs--fixed-tabs': props.fixedTabs,\n            'v-tabs--grow': props.grow,\n            'v-tabs--end': props.end,\n            'v-tabs--stacked': props.stacked,\n          },\n          densityClasses.value,\n          backgroundColorClasses.value,\n        ]}\n        style={backgroundColorStyles.value}\n        role=\"tablist\"\n        symbol={ VTabsSymbol }\n        mandatory=\"force\"\n        direction={ props.direction }\n      >\n        { slots.default ? slots.default() : parsedItems.value.map(item => (\n          <VTab { ...item } key={ item.title } />\n        )) }\n      </VSlideGroup>\n    ))\n\n    return {}\n  },\n})\n\nexport type VTabs = InstanceType<typeof VTabs>\n","import type { InjectionKey } from 'vue'\nimport type { GroupProvide } from '@/composables/group'\n\nexport const VTabsSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-tabs')\n"],"names":["VDialog","genericComponent","name","inheritAttrs","props","fullscreen","Boolean","origin","type","String","default","retainFocus","scrollable","modelValue","makeDimensionProps","width","makeTransitionProps","transition","component","VDialogTransition","emits","value","setup","attrs","slots","_ref","isActive","useProxiedModel","dimensionStyles","useDimension","scopeId","useScopeId","overlay","ref","onFocusin","e","before","relatedTarget","after","target","_overlay$value","contentEl","_overlay$value2","globalTop","document","includes","contains","focusable","querySelectorAll","filter","el","hasAttribute","length","firstElement","lastElement","focus","IN_BROWSER","watch","val","addEventListener","removeEventListener","immediate","async","nextTick","preventScroll","activatorEl","useRender","$event","activator","forwardRefs","VDivider","defineComponent","color","inset","Number","thickness","vertical","makeThemeProps","themeClasses","provideTheme","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","toRef","dividerStyles","computed","styles","convertToUnit","role","undefined","VSpacer","createSimpleFunctional","VTab","fixed","icon","Function","Object","prependIcon","IconValue","appendIcon","stacked","title","ripple","sliderColor","hideSlider","direction","makeTagProps","makeRouterProps","makeGroupItemProps","selectedClass","textColorClasses","sliderColorClasses","textColorStyles","sliderColorStyles","useTextColor","isHorizontal","isSelected","rootEl","sliderEl","updateSlider","_ref2","prevEl","_rootEl$value","$el","parentElement","_rootEl$value$$el$par","querySelector","nextEl","getComputedStyle","prevBox","getBoundingClientRect","nextBox","xy","XY","rightBottom","widthHeight","prevPos","nextPos","delta","Math","sign","size","abs","scale","max","initialScale","sigma","animate","backgroundColor","transform","transformOrigin","Array","fill","duration","easing","standardEasing","btnProps","pick","VTabsSymbol","bias","c","x","calculateUpdatedOffset","selectedElement","containerSize","contentSize","isRtl","currentScrollOffset","clientSize","clientWidth","clientHeight","offsetStart","offsetLeft","offsetTop","adjustedOffsetStart","totalSize","itemOffset","additionalOffset","min","calculateCenteredOffset","offsetCentered","VSlideGroupSymbol","Symbol","for","VSlideGroup","centerActive","symbol","nextIcon","prevIcon","showArrows","validator","v","makeGroupProps","useRtl","mobile","useDisplay","group","useGroup","isOverflowing","scrollOffset","resizeRef","containerRef","contentRect","containerRect","useResizeObserver","contentRef","firstSelectedIndex","selected","items","findIndex","item","id","lastSelectedIndex","frame","cancelAnimationFrame","requestAnimationFrame","sizeProperty","children","disableTransition","startTouch","startOffset","onTouchstart","touches","onTouchmove","onTouchend","maxScrollOffset","onScroll","isFocused","composedPath","onFocusout","onFocus","_contentRef$value","onKeydown","key","location","_contentRef$value$que","nextElementSibling","_contentRef$value$que2","previousElementSibling","firstElementChild","lastElementChild","scrollTo","newAbsoluteOffset","clamp","contentStyles","scrollAmount","willChange","slotProps","next","prev","select","hasAffixes","hasPrev","hasNext","_slots$default","parseItems","map","VTabs","alignWithTitle","fixedTabs","bgColor","centered","grow","height","optional","end","makeDensityProps","model","parsedItems","densityClasses","useDensity","provideDefaults"],"sourceRoot":""}